---
title: "Metacoalition Member Company Survey - Transparencey Review" 
subtitle: "Supply Chain Risk Project Phase 3"
author: 
  - name: Althea Marks
    orcid: 0000-0002-9370-9128
    email: email
    affiliations:
      - name: Stanford Center for Ocean Solutions
date: "`r Sys.Date()`"
format: 
  html: 
    number-sections: false
    toc: true
    code-tools: true
    theme: cosmo 
    self-contained: true
    page-layout: full
title-block-banner: TRUE
execute:
     echo: false
     include: false
     warning: false
---

```{r}
#| warning: false
#| label: setup
#| 
library(renv)
library(readxl)
library(tidyverse)

## Set up directories 
# data directory - create if doesn't already exsist
if(dir.exists(file.path("./data"))){
  data_dir <- file.path("./data")
} else{dir.create(file.path("./data"))
  data_dir <- file.path("./data")
}

# output directory - create if doesn't already exsist
if(dir.exists(file.path("./output"))){
  output_dir <- file.path("./output")
} else{dir.create(file.path("./output"))
  output_dir <- file.path("./output")
}

# output directory - create if doesn't already exsist
if(dir.exists(file.path("./output/figures"))){
  fig_dir <- file.path("./output/figures")
} else{dir.create(file.path("./output/figures"))
  fig_dir <- file.path("./output/figures")
}

# scripts for analysis
scripts_dir <- file.path("./R")

# data for report
data_comp <- file.path(data_dir, "company_survey")
```

```{r import-data}
survey_raw <- read_excel(file.path(data_comp, "SCRP-Metacoalition-Company-Survey-Raw-2023-10-02.xlsx"),
                         sheet = "Responses")

# Nina processed open text responses for questions 6 and 7- read in results
q10_df <- read_excel(file.path(data_comp, "SCRP-Metacoalition-Company-Survey_Question-6-7.xlsx"),
                     sheet = "Question 6", range = "A31:B40")

q11_df <- read_excel(file.path(data_comp, "SCRP-Metacoalition-Company-Survey_Question-6-7.xlsx"),
                     sheet = "Question 7", range = "B29:C37")
```

```{r source-functions}
source(file.path(scripts_dir, "functions-survey.R"))
```

```{r clean-data}
# extract column names
questions_raw <- colnames(survey_raw) %>% 
  as_tibble() 
# dataframe with only survey questions
survey_questions <- str_subset(questions_raw$value, "^[:digit:]") %>% 
  as_tibble() 
# assign survey question IDs
survey_questions %<>% 
  mutate(question_id = paste0("Q",seq(1:nrow(survey_questions)))) %>% 
  rename("question" = value) %>% 
  select(2,1)

# create clean version
survey_clean <- survey_raw %>% 
  select(-1)

# simplify column names to question IDs used in survey_questions
colnames(survey_clean) <- gsub(" ", "_", colnames(survey_clean))
colnames(survey_clean)[6:16] <- survey_questions$question_id

# create dataframe for analysis
survey_analysis_df <- survey_clean %>% 
  select(!1:4)

### Manual Cleaning in needed for errors in raw data

# question 2., response 7 (Response ID eJzAf5Xu): 
# "None" is listed when other responses were selected, remove? - KT & AM agree yes 2023-10-04
survey_analysis_df[7,"Q2"] <- str_replace(survey_analysis_df[[7,"Q2"]], ",None$", "")

# question 3., response 4:
# selected yes, but text says "No" and includes description under selection no
# remove "No" from yes selection column? - AM yes 2023-10-05
survey_analysis_df <- survey_analysis_df %>% 
  mutate(Q3 = ifelse(Q3 == "No", NA, Q3))


```

# Question 1

`r remove_q(survey_questions,1)`

```{r q1-figure-fun}
#| include: true
q1_df <- prep_yn_df(survey_analysis_df, 1)
fig_1 <- mk_hz_bar_fig(q1_df)
fig_1
ggsave(file.path(fig_dir, "Figure_Q1.png"),
       fig_1, 
       device = "png",
       width = 4,
       height = 2,
       dpi = 600,
       )
```

# Question 2

`r remove_q(survey_questions,2)`

```{r q2-fig}
#| include: true

# regex patterns for separating multiple choice selections listed in a single cell
pattern <- "(?<=\\)),|(?<=Other \\(Please specify\\)),|(?<=Other),|(?<=None),"
# pattern for extracting text entered when selected other
specify_pattern <- "Other \\(Please specify\\) - (.*)$"

# Record other text in a separate vector for reporting
specified_text_vector <- survey_analysis_df %>%
  # create new col with string if matches, NA if not
  mutate(specified_text = str_extract(Q2, specify_pattern)) %>%
  # only want to work with new column
  pull(specified_text) %>%
  # replace strings with matching pattern with space
  str_replace("Other \\(Please specify\\) - ", "") %>%
   na.omit() %>%
   unique()

q2_df <- survey_analysis_df %>%
  mutate(Q2 = str_split(Q2, pattern)) %>%
  unnest_longer(Q2) %>%
  select(1, "Q2") %>%
  transmute(Q2 = Q2,
            response = str_replace(Q2, " (?=\\().*", "")) %>%
  count(response) %>% 
  arrange(-n) # sort largest to smallest

fig_2 <- mk_hz_bar_fig(q2_df)
fig_2
ggsave(file.path(fig_dir, "Figure_Q2.png"),
       fig_2, 
       device = "png",
       width = 6,
       height = 4,
       dpi = 600,
       )
```

Text responses for `Other` selections:


```{r echo=FALSE, include= T, results="asis"}
# display text open text responses
for (x in seq_along(specified_text_vector)) {
  vec <- paste0("- \"",specified_text_vector[x],"\"")
    cat(vec, "\n")
}
```

# Question 3

`r remove_q(survey_questions,3)`

```{r q3-figure}
#| include: true

q3_df <- survey_analysis_df %>%
  select(Q3:Q5) %>% 
  pivot_longer(cols = Q3:Q5, names_to = "response") %>% 
  na.omit() %>% 
  mutate(response = ifelse(response == "Q3", "Yes", 
                           ifelse(response == "Q4", "Sometimes", "No")),
         response = factor(response)) 

q_3_fig_df <- q3_df %>% 
  count(response) %>% 
  arrange(desc(n))


fig_3 <- mk_hz_bar_fig(q_3_fig_df)
fig_3

ggsave(file.path(fig_dir, "Figure_Q3.png"),
       fig_3, 
       device = "png",
       width = 4,
       height = 2,
       dpi = 600,
       )

```

Text responses for `Yes` selections:

```{r echo=FALSE, include= T, results="asis"}
# display text open text responses
for (x in seq_along(q3_df$response)) {
  if(q3_df$response[x] == "Yes"){
    formatted_string <- paste("- \"", q3_df$value[x],"\"")
    cat(formatted_string, "\n")
  }
}

```

Text responses for `Sometimes` selections:

```{r echo=FALSE, include= T, results="asis"}
# display text open text responses
for (x in seq_along(q3_df$response)) {
  if(q3_df$response[x] == "Sometimes"){
    formatted_string <- paste("- \"", q3_df$value[x],"\"")
    cat(formatted_string, "\n")
  }
}

```

Text responses for `No` selections:

```{r echo=FALSE, include= T, results="asis"}
# display text open text responses
for (x in seq_along(q3_df$response)) {
  if(q3_df$response[x] == "No"){
    formatted_string <- paste("- \"", q3_df$value[x],"\"")
    cat(formatted_string, "\n")
  }
}

```

# Question 4

`r remove_q(survey_questions,6)`

```{r q6_fig}
#| include: TRUE
q6_df <- survey_analysis_df %>% 
  select(Q6:Q7)

# regex patterns for separating multiple choice selections listed in a single cell
pattern_sep_mc <- "(?<=FAO Global Record),|(?<=National vessel lists),|(?<=RFMO vessel authorization lists),|(?<=Global Fishing Watch),|(?<=I don't use any platforms),|(?<=FAO Designated Ports App),|(?<=FAO PSMA Global Information Exchange System),|(?<=Others not listed \\(Please specify\\)),"

# pattern for extracting text entered when selected other
pattern_other_extract <- "Others not listed \\(Please specify\\) - (.*)$"
pattern_other_replace <- "Others not listed \\(Please specify\\) - "

# record other text in a separate vector for reporting
specified_text_vector_q6 <- q6_df %>%
  mutate(specified_text = str_extract(Q6, pattern_other_extract)) %>%
  pull(specified_text) %>%
  str_replace(pattern_other_replace, "") %>%
  na.omit() %>%
  unique()

q6_df <- q6_df %>%
  mutate(Q6 = str_split(Q6, pattern_sep_mc)) %>%
  unnest_longer(Q6) %>%
  select(1, "Q6") %>%
  transmute(Q6 = Q6,
            response = str_replace(Q6, " (?=\\().*", ""),
            response = factor(response)) %>%
  count(response) %>% 
  arrange(-n) # sort largest to smallest

fig_4 <- mk_hz_bar_fig(q6_df)
fig_4
ggsave(file.path(fig_dir, "Figure_Q4.png"),
       fig_4, 
       device = "png",
       width = 8,
       height = 6,
       dpi = 600,
       )
```

Text responses for `Others not listed` selections:

```{r include= T, results="asis"}
# display text open text responses
for (x in seq_along(specified_text_vector_q6)) {
  formatted_string <- paste("- ", specified_text_vector_q6[x])
    cat(formatted_string, "\n")
}
```

# Question 5

`r remove_q(survey_questions,8)`

```{r q8-figure}
#| include: true
q8_df <- prep_yn_df(survey_analysis_df, 8)
fig_5 <- mk_hz_bar_fig(q8_df)
fig_5
ggsave(file.path(fig_dir, "Figure_Q5.png"),
       fig_5, 
       device = "png",
       width = 4,
       height = 2,
       dpi = 600,
       )
```

Text explinations:

```{r include= T, results="asis"}
# display text open text responses
q9_df <- survey_analysis_df %>% 
  select(Q9) %>% 
  na.omit()

for (x in seq_along(q9_df$Q9)) {
  formatted_string <- paste("- \"", q9_df$Q9[x],"\"")
    cat(formatted_string, "\n")
}
```

# Question 6

`r remove_q(survey_questions,10)`

```{r q10-figure}
#| include: true
fig_6 <- mk_hz_bar_fig(q10_df)
fig_6

ggsave(file.path(fig_dir, "Figure_Q6.png"),
       fig_6, 
       device = "png",
       width = 8,
       height = 6,
       dpi = 600,
       )
```


# Question 7

`r remove_q(survey_questions,11)`

```{r q11-figure}
#| include: true
fig_7 <- mk_hz_bar_fig(q11_df)
fig_7

ggsave(file.path(fig_dir, "Figure_Q7.png"),
       fig_7, 
       device = "png",
       width = 8,
       height = 6,
       dpi = 600,
       )
```

