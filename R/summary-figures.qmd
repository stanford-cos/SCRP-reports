---
title: "summary-figures"
format: html
editor: visual
---

## Packages, Package version control, directories

```{r, setup}

# set universal code chunk options, suppress warning and messages
knitr::opts_chunk$set(warning = F, message = F)

# package and R version control for reproducibility 
library("groundhog")
# list additional packages in vector below
pkgs <- c(
  "readr",
  "tidyverse", 
  "magrittr",
  "readxl",
  "purrr") 
# Keep this date set to load package versions corresponding with date
groundhog.library(pkgs, "2023-01-01")

## Set up directories - need to fix
if(dir.exists(file.path("../figures"))){
  fig_dir <- file.path("../figures")
} else{dir.create(file.path("../figures"))
  fig_dir <- file.path("../figures")
}

if(dir.exists(file.path("../data"))){
  data_dir <- file.path("../data")
} else{dir.create(file.path("../data"))
  data_dir <- file.path("../data")
}
```

## Read in Data

```{r Import_Data}
## Compiled vessel data
comp_vessels <- read_csv(file.path(data_dir,"CompiledVesselsIndicators-2023-02-15.csv"))


## IUU Vessel List
iuu_vessels <- read_excel(file.path(data_dir,"IUUList-20230127.xls"), sheet = "IUUList")

## Set company variable (change based on which report is being generated)
company <- "NESI"
sup_chain <- "Sri Lanka Yellowfin"

# summarize of companies and their supply chains
company_sup_chains <- comp_vessels %>% 
  group_by(c, c_listname) %>% 
  summarize()

## Filter data by company & supply chain
vessels <- comp_vessels %>% 
  filter(c == company,
         c_listname == sup_chain)
```

## General report values

-   Number of vessels in supply chain
-   AIS positions found for percent of supply chain vessels
-   Range AIS coverage percent in last year for supply chain

```{r report_values}

# merged first round of vessel viewer numbers back into CompiledVesselsIndicators table

# bb_tuna <- read_csv(file.path(data_dir,"vessel_indicators_vv_marks_2023-02-15.csv"))
# 
# joined_vessels <- comp_vessels %>%
#   left_join(bb_tuna %>%
#               select(c, c_listname, c_name, 66:82),
#                      by = c("c", "c_listname", "c_name")
# )

# Specifically look at Bumble Bee Tuna supply chain of Fiji flagged vessels fishing in Fiji
bb_fiji <- comp_vessels %>% 
  filter(c %in% c("Bumble Bee"),
         c_listname %in% c("Tuna"),
         c_flag %in% c("Fiji"),
         str_detect(gfw_eez, "Fiji"))

report_general <- bb_fiji %>% 
  summarize("company" = unique(c),
            "supply_chain" = unique(c_listname),
            "vessels_total_n" = length(v_id),
            "vessels_ais_n" = sum(!is.na(vv_ais_coverage_percent)),
            "prct_vessels_ais" = vessels_ais_n / vessels_total_n,
            "prct_ais_cover_min" = min(vv_ais_coverage_percent, na.rm = T),
            "prct_ais_cover_max" = max(vv_ais_coverage_percent, na.rm = T),
            "prct_ais_cover_median" = median(vv_ais_coverage_percent, na.rm = T),
            "prct_ais_cover_mean" = mean(vv_ais_coverage_percent, na.rm = T)
            )

```

```{r bb_kde}

report_kde_bb_fiji <- bb_fiji %>%
  summarize(
    "company" = unique(c),
    "supply_chain" = unique(c_listname),
    "species" = any(!is.na(c_species) |!is.na(c_common_name)),
    "country_harvest" = any(!is.na(c_country)),
    "ports_landing" = any(!is.na(c_port)),
    "eez_highseas" = NA,
    "harvest_rfmo" = NA,
    "harvest_fao" = any(!is.na(c_fao)),
    "harvest_fao_sub" = NA,
    "cert_name" = NA,
    "fip" = any(!is.na(FIP)),
    "vessel_name" = any(!is.na(c_name)),
    "vessel_name_n" = sum(!is.na(c_name)),
    "vessel_imo" = any(!is.na(c_imo)),
    "vessel_imo_n" = sum(!is.na(c_imo)),
    "vessel_mmsi" = any(!is.na(c_mmsi)),
    "vessel_mmsi_n" = sum(!is.na(c_mmsi)),
    "vessel_callsign" = NA,
    "vessel_flag" = any(!is.na(c_flag)),
    "vessel_flag_n" = sum(!is.na(c_flag)),
    "ais_data" = any(!is.na(vv_ais_coverage_percent)),
    "ais_data_n" = sum(!is.na(vv_ais_coverage_percent)),
    "transship_reported" = NA
  ) 

```


```{r functions}

# create checklist of Key data elements (kde) for each company supply chain
# assesses completeness of data company provided
check_kde_data <- function(company, supplychain){
  df <- comp_vessels %>% 
    filter(c %in% company & c_listname %in% supplychain) %>% 
    summarize("company" = company,
              "supply_chain" = supplychain,
            "species" = any(!is.na(c_species) | !is.na(c_common_name)),
            "country_harvest" = any(!is.na(c_country)),
            "ports_landing" = any(!is.na(c_port)),
            "eez_highseas" = NA,
            "harvest_rfmo" = NA,
            "harvest_fao" = any(!is.na(c_fao)),
            "harvest_fao_sub" = NA,
            "cert_name" = NA,
            "fip" = any(!is.na(FIP)),
            "vessel_name" = any(!is.na(c_name)),
            "vessel_imo" = any(!is.na(c_imo)),
            "vessel_mmsi" = any(!is.na(c_mmsi)),
            "vessel_callsign" = NA,
            "vessel_flag" = any(!is.na(c_flag)),
            "ais_data" = any(!is.na(gfw_prop_ais_coverage)),
            "transship_reported" = NA
            ) 
  return(df)
}
```

## KDE checklist

-   percent of missing KDE
-   species scientific name
-   country of harvest
-   port(s) of landing
-   fishing in EEZ or high seas
-   RFMO of harvest
-   FAO region
-   FAO subregion (optional)
-   Certification name (if applicable)
-   FIP profile (if applicable)
-   Vessel name
-   Vessel IMO IMO number
-   Vessel MMSI
-   Vessel call sign (optional)
-   Vessel flag state (optional)
-   AIS data
-   Reported transshipments

```{r kde_checklist}

# create kde checklist for all supply chains
kde_checklist <- purrr::map2_dfr(company_sup_chains$c, company_sup_chains$c_listname, check_kde_data)

```

```{r quick_summary_jim}
summary_jim <- comp_vessels %>% 
  group_by(c, c_listname) %>% 
  summarize(num_vessels = length(c_name),
            num_vessels_ais = sum(!is.na(gfw_prop_ais_coverage)),
            percent_vessels_ais = num_vessels_ais / num_vessels *100,
            mean_ais_prop = mean(gfw_prop_ais_coverage, na.rm = T),
            med_ais_prop = median(gfw_prop_ais_coverage, na.rm = T))
```

```{r tableau_table}
# what is "flag in open registries"?
# where is "Total Trip Count" coming from? not in compiled vessels
# Where to pull "Average Trip length" from?
# where to pull "Fishing Events (hrs)"
# "RFMO Fishing Event (hrs)" not calculated yet
# "Unauthorized Fishing Event (hrs)" not calculated yet
# What are Gap events?
# 

tableaue_table <- comp_vessels %>% 
  select(v_id, c_country, gfw_fishing_hr_mpa, m_c_eu_flag, m_c_us_flag, ) %>% 
  
```

## List of IUU report indicators

-   RFMO IUU blacklisted vessels
-   Fishing events in RFMO without known authorization
    -   number of vessels
-   Potential transshipment events in RFMO without known authorization
    -   number of vessels
-   Potential fishing events in Marine Protected Areas
    -   number of vessels
    -   total fishing hours
-   Intentional ais disabling events
    -   total hours disabled
    -   proportion of AIS coverage in last year
-   Vessels with long fishing trips (\>11 mo)
-   Number of vessel name changes in last year
-   Number of vessel flag changes in last year

```{r report_IUU_indicators}

report_indicators <- bb_fiji %>% 
  summarize(
      # High Risk Indicators      
            "iuu_listed" = sum((vv_iuu_listed)),
            "rfmo_no_auth_events" = sum(vv_rfmo_unauthorized_events),
            "rfmo_no_auth_vessels_n" = sum(vv_rfmo_unauthorized_events > 0),
            "transship_rfmo_events" = sum(vv_encounters_rfmo_unauthorized),
            "transship_rfmo_vessels_n" = sum(vv_encounters_rfmo_unauthorized > 0),
            "mpa_events" = sum(vv_mpa_events),
            "mpa_vessels_n" = sum(vv_mpa_events > 0),
            "mpa_total_hrs" = sum(vv_mpa_hrs),
      # Medium Risk Indicators
            "ais_disabling_events" = sum(vv_ais_disabled_n),
            "ais_disabling_vessels_n" = sum(vv_ais_disabled_n > 0),
            "ais_disabling_total_hrs" = sum(vv_ais_disable_hrs),
            "ais_prop_cover_1yr_min" = min(vv_ais_coverage_percent, na.rm = T),
            "ais_prop_cover_1yr_max" = max(vv_ais_coverage_percent, na.rm = T),
            "ais_prop_cover_1yr_median" = median(vv_ais_coverage_percent, na.rm = T),
            # number of vessels with trips > 11 months
            "vessels_long_trip_n" = sum(map_long_trip_n),
            "vessels_name_change_n" = sum(vv_name_change),
            "vessels_flag_change_n" = sum(vv_flag_change)
  )
```

```{r iuu_vessel_list}

iuu_listed <- iuu_vessels %>% 
  filter(CurrentlyListed == "True") %>% 
  select(Name, MMSI, VesselStatus, 20:47) %>% 
  mutate(Name = toupper(Name),
         MMSI = as.numeric(MMSI))

scrt_vessels <- vessels %>% 
  select(c_name, gfw_mmsi) %>% 
#  filter(gfw_mmsi > 0) %>% 
  rename("Name" = c_name,
         "MMSI" = gfw_mmsi)

# cross validate IUU list and scrt vessels by mmsi - will match by NA (interpret results carefully)
iuu_mmsi <- iuu_listed %>%
  inner_join(scrt_vessels, by = c("MMSI"))
# cross validate IUU list by vessel name
iuu_name <- iuu_listed %>% 
  inner_join(scrt_vessels, by = "Name")



# Need to manually look at both tables of matching
```

## Contextual Risk Indicators

-   Corruption Perceptions Index
-   PSMA ratification
-   EU carding status
-   US listing status
-   SIMP
-   Petrossian & Clark (2014) score

```{r key_data_elements}

#### mmsi
mmsi <- vessels %>% 
  select(c_mmsi) %>% 
  filter(c_mmsi > 0)

# % of vessels with mmsi 
nrow(mmsi) / nrow(vessels)

# gfw mmsi found
mmsi_gfw <- vessels %>% 
  select(gfw_mmsi) %>% 
  filter(gfw_mmsi > 0)

nrow(mmsi_gfw) / nrow(vessels)

##### AIS disabled

ais_dis <- vessels %>% 
  select(gfw_prop_ais_disable) %>% 
  filter(gfw_prop_ais_disable > 0)
  
nrow(ais_dis)

##### AIS availability
ais_avl <- vessels %>% 
  select(m_AIS, gfw_prop_ais_coverage) %>% 
  filter(m_AIS == "Have AIS for this vessel")

# percent vessels with AIS
nrow(ais_avl) / nrow(vessels)

ais_gfw <- vessels %>% 
  select(m_AIS, gfw_prop_ais_coverage) %>% 
  drop_na()

# percent vessels picked up by GFW
nrow(ais_gfw) / nrow(vessels)

# percent with AIS coverage
ais_cover <- vessels %>% 
  select(gfw_prop_ais_coverage) %>%
  filter(gfw_prop_ais_coverage > 0)
# percent of all vessels 
nrow(ais_cover) / nrow(vessels)

range(ais_cover)

###### Port Matching 
port_match <- vessels %>% 
  select(port_matching) %>% 
  na.omit() %>% 
  filter(!port_matching %in% c("No AIS coverage", "AIS turned off before port entry"))

nrow(port_match) / nrow(vessels)


  
```

```{r function_doughnut}
make_doughnut <- function(indicator) {
  fig_data <- indicator %>%
    select(data_vessels, nodata_vessels) %>%
    pivot_longer(
      cols = c(data_vessels, nodata_vessels),
      names_to = "data",
      values_to = "count"
    ) %>%
    mutate(fraction = count / sum(count))
  fig_data$ymax = cumsum(fig_data$fraction)
  fig_data$ymin <- c(0, head(fig_data$ymax, n = -1))
  
  
  # doughnut color
  
  dough_color <- c("#0074DD", "#9BCCFD")
  
  # doughnut figure
  doughnut <- ggplot(fig_data,
                     aes(
                       ymax = ymax,
                       ymin = ymin,
                       xmax = 4,
                       xmin = 3,
                       fill = data
                     )) +
    geom_rect() +
    # Try to remove that to understand how the chart is built initially
    coord_polar(theta = "y") +
    # adjust thickness
    xlim(c(0, 4)) +
    theme_void() +
    scale_fill_manual(values = dough_color) +
    #scale_color_manual(values = dough_color) +
    theme(legend.position = "none")
  
  ggsave(doughnut,
         filename = file.path(fig_dir,
                              paste0("doughnut_", 
                                     deparse(substitute(indicator)), 
                                     ".png")),
           width = 0.5,
           height = 0.5,
           units = "in",
           dpi = 600
         )
}

# calc percent vessels with data
calc_prt_vessels <- function(indicator){
  indicator$data_vessels/(indicator$data_vessels + indicator$nodata_vessels)
}


```

## High Priority

```{r High_priority}
#### IUU Listed Vessels

#### Unauthorized Fishing in RFMO

#### MPA Fishing hours 

mpa_hr <- vessels %>% 
  select(gfw_fishing_hr_mpa) %>% 
  summarize("data_vessels" = sum(!is.na(gfw_fishing_hr_mpa)),
            "nodata_vessels" = sum(is.na(gfw_fishing_hr_mpa)),
           "mpa_vessels" = length(vessels$gfw_fishing_hr_mpa[which(vessels$gfw_fishing_hr_mpa > 0)]),
           "mpa_hrs" = sum(gfw_fishing_hr_mpa, na.rm = T)
           )
# make vessel data availability doughnut figure
make_doughnut(mpa_hr)

# vessels with data
calc_prt_vessels(mpa_hr)

#### Unauthorized Transshipment

un_tship <- vessels %>% 
  select(gfw_n_transship_unauthorized) %>% 
  summarize("data_vessels" = length(vessels$gfw_n_transship_unauthorized[which(!is.na(vessels$gfw_n_transship_unauthorized))]),
            "nodata_vessels" = length(vessels$gfw_n_transship_unauthorized[which(is.na(vessels$gfw_n_transship_unauthorized))]),
            "n_unauth" = sum(gfw_n_transship_unauthorized, na.rm = T)
            )
make_doughnut(un_tship)
calc_prt_vessels(un_tship)
```

## Medium Priority

```{r}
## Vessel Name Changes 

## Vessel Flag Changes 

## Intentional AIS Disabling
ais_dis <- vessels %>% 
  select(gfw_prop_ais_disable) %>% 
  summarize("data_vessels" = length(vessels$gfw_prop_ais_disable[which(!is.na(vessels$gfw_prop_ais_disable))]),
            "nodata_vessels" = length(vessels$gfw_prop_ais_disable[which(is.na(vessels$gfw_prop_ais_disable))]),
            "n_vessels_dis" = length(vessels$gfw_prop_ais_disable[which(vessels$gfw_prop_ais_disable > 0)])
            )

make_doughnut(ais_dis)
calc_prt_vessels(ais_dis)

## Long Fishing Trips

long_trip <- vessels %>% 
  select(gfw_n_long_trips) %>% 
  summarize("data_vessels" = length(vessels$gfw_n_long_trips[which(!is.na(vessels$gfw_n_long_trips))]),
            "nodata_vessels" = length(vessels$gfw_n_long_trips[which(is.na(vessels$gfw_n_long_trips))]),
            "n_longtrip" = sum(gfw_n_long_trips, na.rm = T))

make_doughnut(long_trip)
calc_prt_vessels(long_trip)
```

## Low Priority

```{r}
## EU Carding Status 
card_eu <- vessels %>% 
  select(m_c_eu_flag) 

unique(card_eu)

## US Carding Status
card_us <- vessels %>% 
  select(m_c_us_flag) 

unique(card_us)

## IUU Species Risk

iuu_species <- vessels %>% 
  select(m_petro_score)

unique(iuu_species)
```
